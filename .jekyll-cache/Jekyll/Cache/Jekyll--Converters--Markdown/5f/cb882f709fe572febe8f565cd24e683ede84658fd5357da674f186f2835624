I"=7<ul>
  <li>
    <p>5주차 과제 - 대표 선발(구현 알고리즘(시뮬레이션과 완전 탐색))</p>

    <p>단, turn은 10000 이하이다.</p>
  </li>
</ul>

<p><img src="https://user-images.githubusercontent.com/34560965/113744815-01de9e80-9740-11eb-8f9b-c1b95fac5956.png" alt="image" />
<img src="https://user-images.githubusercontent.com/34560965/113744820-030fcb80-9740-11eb-9fa9-3908a703b7e5.png" alt="image" />
<img src="https://user-images.githubusercontent.com/34560965/113744828-04d98f00-9740-11eb-932a-a6e33511369e.png" alt="image" /></p>

<ul>
  <li>
    <p>사용 언어 : python</p>
  </li>
  <li>
    <p>해결 날짜 : 2021-04-07</p>
  </li>
  <li>
    <p>느낀점 및 해결 과정 :</p>

    <ul>
      <li>이번 과제는 2차원 리스트에 판을 지렁이는 1, 먹이는 -1, 빈 공간은 0의 값을 가지도록 초기화 하였다. 또 R, D, L, U에 맞는 벡터인 dx, dy를 정의하여 각 turn 마다 x와 y에 각각 dx와 dy값을 더해주었다. 여기서 dx, dy의 인덱스는 0부터 3까지로 만약 R이 입력되면 +1, L이 입력되면 -1을 해주었다.(0일 때 -1은 3으로, 3일 때 +1은 0으로 처리)</li>
      <li>판의 크기 N, 사과의 개수 K, 방향 전환 횟수 M, 사과의 위치, 방향 전환 정보 direction_change를 각각 입력 받는다.</li>
      <li>초기화를 다 하고 난 뒤, 게임이 시작하면 현재 turn을 1씩 증가시키고 x와 y에 각각 현재 방향에 맞는 방향 벡터 값을 더해준다. 그 후 게임이 종료되는 조건인 판 밖으로 나가 게임이 끝나는 경우, 자신의 몸의 부딪혀 게임이 끝나는 경우, turn의 개수가 10000보다 커져 게임이 끝날 경우의 세가지 경우를 검사하여 만약 세 경우 중 하나라도 만족하면 break로 게임을 종료한다.
  세 조건 모두 만족하지 않는다면 게임이 지속되고, 방향 전환 정보가 저장된direction_change가 비어 있지 않다면 하나를 꺼내 와서 몇 번째 턴에 방향을 바꾸나(move_count)와 어느쪽으로 방향을 바꾸나(change)를 저장한다.
  그 후 방향 전환 turn이 됐다면(move_count == turn), 아까 저장했던 정보를 pop하여 queue에서도 없애주고, 방향을 바꾸어준다(d를 변경)
  마지막으로 이동할 때는 먹이가 없는 경우에는 worm.pop()으로 꼬리를 잘라 그 위치의 값을 0으로 만들어주고, 먹이가 있던 없던 이동은 하므로 이동하기 전의 지렁이 위치를 worm에 추가하고 이동한 곳의 지렁이 위치의 값을 1로 만들어준다.</li>
      <li>
        <p>과제를 해결하며 처음에는 단순히 사용자가 M을 얼마나 잘 입력받느냐에 따라 시간 복잡도가 결정될 것이라 생각했는데, turn의 조건이 생기고 turn에 따라 시간 복잡도가 결정될 것이라 예상했다.</p>
      </li>
      <li>
        <p>시간 복잡도 :</p>

        <ul>
          <li>판 초기화 : N2</li>
          <li>사과가 있는 인덱스 초기화 : K, 방향 전환 정보 초기화 : M</li>
          <li>while문 : T(turn의 개수) + N</li>
          <li>최악의 경우를 구하는 것이므로 turn이 10000일 때, N이 100일 때, K가 100일 때 이다. M은 아무리 커도 10000보다는 작다. 따라서 시간 복잡도는 O(N2+K+M+T+N) = O(2T) = O(T)일 것이라 예상한다.</li>
        </ul>
      </li>
      <li>코드</li>
    </ul>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
</pre></td> --><td class="rouge-code"><pre> <span class="kn">import</span> <span class="nn">collections</span>

  <span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span> <span class="c1"># 판의 크기
</span>  <span class="n">K</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span> <span class="c1"># 사과의 개수
</span>  <span class="n">M</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span> <span class="c1"># 방향 전환 횟수
</span>
  <span class="n">board</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">N</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span> <span class="c1"># 판 초기화
</span>  <span class="n">board</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span> <span class="c1"># 지렁이의 시작 위치는 1,1
</span>  <span class="c1"># 판 위에서 지렁이는 1, 먹이는 -1, 빈 공간은 0
</span>
  <span class="n">turn</span> <span class="o">=</span> <span class="mi">0</span>
  <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span> <span class="c1"># 처음 시작 위치
</span>  <span class="n">worm</span> <span class="o">=</span> <span class="p">[(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)]</span> <span class="c1"># 지렁이가 있는 위치를 저장(머리부터 꼬리까지)
</span>  <span class="n">d</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># 방향 ( R:0 D:1 L:2 U:3 )
</span>
  <span class="c1"># R, D, L, U
</span>  <span class="n">dx</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">]</span>
  <span class="n">dy</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>

  <span class="c1"># 사과가 있는 인덱스의 값은 -1로 초기화
</span>  <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">K</span><span class="p">):</span>
      <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">(</span><span class="s">" "</span><span class="p">)</span>
      <span class="n">board</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="nb">int</span><span class="p">(</span><span class="n">j</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>

  <span class="c1"># 방향 전환 정보
</span>  <span class="n">direction_change</span> <span class="o">=</span> <span class="n">collections</span><span class="p">.</span><span class="n">deque</span><span class="p">()</span>
  <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">M</span><span class="p">):</span>
      <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">(</span><span class="s">" "</span><span class="p">)</span>
      <span class="n">direction_change</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">j</span><span class="p">))</span>

  <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
      <span class="n">turn</span> <span class="o">+=</span> <span class="mi">1</span>
      <span class="n">x</span> <span class="o">+=</span> <span class="n">dx</span><span class="p">[</span><span class="n">d</span><span class="p">]</span>
      <span class="n">y</span> <span class="o">+=</span> <span class="n">dy</span><span class="p">[</span><span class="n">d</span><span class="p">]</span>

      <span class="c1"># 판 밖으로 나가 게임이 끝나는 경우
</span>      <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">5</span> <span class="ow">or</span> <span class="n">y</span> <span class="o">&gt;</span> <span class="mi">5</span><span class="p">:</span>
          <span class="k">break</span>
      <span class="c1"># 자신의 몸의 부딪혀 게임이 끝나는 경우
</span>      <span class="k">if</span> <span class="n">board</span><span class="p">[</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
          <span class="k">break</span>
      <span class="c1"># turn의 개수가 10,000보다 커져 게임이 끝날 경우
</span>      <span class="k">if</span> <span class="n">turn</span> <span class="o">&gt;=</span> <span class="mi">10000</span><span class="p">:</span>
          <span class="k">break</span>

      <span class="c1"># 방향 전환 정보 저장(정보가 남아 있을 경우)
</span>      <span class="k">if</span> <span class="n">direction_change</span><span class="p">:</span>
          <span class="n">move_count</span><span class="p">,</span> <span class="n">change</span> <span class="o">=</span> <span class="n">direction_change</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

      <span class="c1"># 방향 전환 turn이 됐을 때
</span>      <span class="c1"># (pop(0)는 O(n)이므로) deque의 popleft() 사용
</span>      <span class="k">if</span> <span class="n">move_count</span> <span class="o">==</span> <span class="n">turn</span><span class="p">:</span>
          <span class="n">direction_change</span><span class="p">.</span><span class="n">popleft</span><span class="p">()</span>

          <span class="c1"># 방향 바꾸기
</span>          <span class="k">if</span> <span class="n">change</span> <span class="o">==</span> <span class="s">'R'</span><span class="p">:</span>
              <span class="n">d</span> <span class="o">=</span> <span class="n">d</span> <span class="o">+</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">d</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="k">else</span> <span class="mi">0</span>
          <span class="k">elif</span> <span class="n">change</span> <span class="o">==</span> <span class="s">'L'</span><span class="p">:</span>
              <span class="n">d</span> <span class="o">=</span> <span class="n">d</span> <span class="o">-</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">d</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="mi">3</span>

      <span class="c1"># 먹이가 없는 경우 꼬리 자르기
</span>      <span class="k">if</span> <span class="n">board</span><span class="p">[</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
          <span class="n">tailX</span><span class="p">,</span> <span class="n">tailY</span> <span class="o">=</span> <span class="n">worm</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
          <span class="n">board</span><span class="p">[</span><span class="n">tailX</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">tailY</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>

      <span class="c1"># 먹이가 있던 없던 전진
</span>      <span class="n">worm</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
      <span class="n">board</span><span class="p">[</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="k">print</span><span class="p">(</span><span class="n">turn</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>
:ET