I"	<ul>
  <li>스택/큐 알고리즘 문제 : 프로그래머스 LEVEL 2(기능개발)
<img src="https://user-images.githubusercontent.com/34560965/105817895-91a5f500-5ff9-11eb-9058-514426e22697.png" alt="image" />
    <ul>
      <li>사용 언어 : C++</li>
      <li>해결 날짜 : 2021-01-26</li>
    </ul>

    <p><strong>- 해결 방법</strong> :</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td> --><td class="rouge-code"><pre> 우선 작업 별 소요 일 수는 (100-progresses)/speeds 임을 활용하였다.

 처음에 형변환을 하지 않고 위의 식을 새로 선언한 rate vector에 push한 다음 비교하는 과정을 수행하였는데, 마지막 테스트 케이스에서 계속 오류가 발생하여 찾아보니 c++에서는 형변환 후 저장하는 과정이 강요됨을 알게되었다.
    
 이 작업들을 돌며 앞 작업보다 작업 일수가 큰 작업이 나올때 까지 아직 배포되지 않은 작업 중 첫번째 작업과 그 뒤의 작업들을 비교하여 작업들을 추가하였고, 마지막 작업은 반복문의 종료 후 따로 추가해주었다.
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <ul>
      <li>코드</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td> --><td class="rouge-code"><pre> #include &lt;string&gt;
 #include &lt;vector&gt;
 #include &lt;cmath&gt;

 using namespace std;
 //(100-progresses[i]) / speeds[i]
 vector&lt;int&gt; solution(vector&lt;int&gt; progresses, vector&lt;int&gt; speeds) {
     vector&lt;int&gt; answer;
     vector&lt;double&gt; rate;
     //작업 별 배포하는데 필요한 소요 일 수를 저장
     for(int i = 0; i&lt;progresses.size(); i++){
         rate.push_back((double)(100-progresses[i]) / (double)speeds[i]);
     }
     int temp = 0;
     int ans = 0;
     int total = 0;
     for(int i = 1; i&lt;progresses.size(); i++){
         ans++;
         //배포되지 않은 작업 중 제일 앞 작업과 그 뒤의 작업들을 비교,
         //앞 작업보다 작업 일수가 큰 작업이 나올 때 까지
         if(ceil(rate[i]) &gt; ceil(rate[temp])){
             temp = i;
             answer.push_back(ans);
             ans = 0;
         }
     }
     //마지막 작업까지 추가
     answer.push_back(rate.size()-temp);
        
     return answer;
 }
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>
:ET