I"D<ul>
  <li>
    <p>이분탐색 알고리즘 문제 : 프로그래머스 LEVEL 3(입국심사))</p>

    <p><img src="https://user-images.githubusercontent.com/34560965/108390339-ec76e900-7253-11eb-878c-35876b5fbbb6.png" alt="image" /></p>

    <ul>
      <li>
        <p>사용 언어 : python</p>
      </li>
      <li>
        <p>해결 날짜 : 2021-05-04</p>
      </li>
      <li>
        <p>해결 방법 :</p>

        <ul>
          <li>
            <p>이진 탐색을 위한 시작점과 끝점을 설정한다. 여기서 끝점은 최대 시간의 계산대에서 K명이 전부 계산한 경우이다.</p>
          </li>
          <li>
            <p>이진 탐색을 수행하며 mid시간 안에 있는 계산대 일 때만 계산한 사람의 수를 추가해준다.</p>
          </li>
          <li>
            <p>계산한 사람의 수가 계산이 끝났을 때 계산한 사람의 수가 모자란 경우 더 많은 시간을 부여하고(오른쪽 부분 탐색), 충분한 경우 더 적은 시간을 부여한다(왼쪽 부분 탐색).</p>
          </li>
        </ul>
      </li>
      <li>
        <p>코드</p>
      </li>
    </ul>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre> <span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">times</span><span class="p">):</span>
 <span class="c1"># 이진 탐색을 위한 시작점과 끝점
</span> <span class="c1"># 끝점은 최대 시간의 심사관한테서 n명이 전부 심사한 경우
</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span>
 <span class="n">end</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">times</span><span class="p">)</span><span class="o">*</span><span class="n">n</span>

 <span class="c1"># 이진 탐색 수행
</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>
 <span class="k">while</span> <span class="n">start</span> <span class="o">&lt;=</span> <span class="n">end</span><span class="p">:</span>
     <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
     <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
     <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">start</span> <span class="o">+</span> <span class="n">end</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span>
     <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">times</span><span class="p">:</span>
         <span class="c1"># mid 시간안에 있는 심사대에서만 심사 가능
</span>         <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="n">mid</span><span class="p">:</span>
             <span class="c1"># 심사받은 사람의 수 계산
</span>             <span class="n">count</span> <span class="o">+=</span> <span class="n">mid</span> <span class="o">//</span> <span class="n">x</span>
     <span class="c1"># 심사받은 사람의 수가 모자란 경우 더 많은 시간을 부여(오른쪽 부분 탐색)
</span>     <span class="k">if</span> <span class="n">count</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">:</span>
         <span class="n">start</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span>
     <span class="c1"># 심사받은 사람의 수가 충분한 경우 더 적은 시간을 부여(왼쪽 부분 탐색)
</span>     <span class="k">else</span><span class="p">:</span>
         <span class="n">result</span> <span class="o">=</span> <span class="n">mid</span>  <span class="c1"># 최소 시간을 찾는 것 이므로 저장해놓음
</span>         <span class="n">end</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">-</span> <span class="mi">1</span>

 <span class="k">return</span> <span class="n">result</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>
:ET